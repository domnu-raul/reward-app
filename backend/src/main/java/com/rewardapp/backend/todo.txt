DONE: Enforce measurments and material types into contributions.
DONE: Add reward system(maybe a trigger) to contributions.
DONE: SQL View to find the reward points of the user, the impact they had, and the money they earned.
DONE: Add PurchaseOptions table.
DONE: Add Vouchers table.
DONE: Add Purchases table.
Add GoogleUsers.
Refactor to JDBC? Search which is better.

Mappers and DTO:
    Contribution
    Purchase
    Session
    User

EXCEPTIONS:
    IncorrectPasswordException
    UserNotFoundException
    UsernameTakenException
    EmailTakenException
    InvalidEmailException

    UnauthorizedException

    InvalidSessionException
    InvalidDataException
    ResourceNotFoundException

FRONT-END FUNCTIONALITIES:
    - Registration page:
        USERNAME
        E-MAIL
        PASSWORD x 2

        Email validation(REGEX) +
        Email confirmation(Email sender(Backend))
        Social Media Integration.

    - Login page:
        Simple validation.

    - Home page(user):
        "Recycling Centers" section(table view)
            COLUMNS: Name, Location, type(s) of material, operating hours.
            Initially sorted alphabetically.
            Shows a relevant message if there is nothing to show.

            Dropdown menu for filtering: // NO PAGE RELOAD - IN REAL TIME
                by materials
                multiple seelctions

            Search bar at the top - shows results based on names/addresses.
            Supports partial matches. Updates in real time(NO SEARCH BUTTON)

            RESET button, resets filters, sorts, and searches.

            Sort
                by recyclingCenterLocation
                by name
                by type accepted
            No sort button, use the columns.


    - User Recycling Tracking:
        Shows contributed materials(per type).

        A form for contributing to a center:
            Material type(dropdown, searchable) only including the types
            of materials accepeted by that center
            Amount(in kg, piece, dkg, g) with numbers-only validation.
            CONTRIBUTE btn, will update the user's progress in real time.

    - Dashboard page(Admin):
        Add new center:
            recyclingCenterLocation(map, searchable, enforce proper recyclingCenterLocation data and geocoding)
            materials(dropdown, searchable)
            name(text-field)
            working hours(2 time selectors)

            Save button:
                returns error("ALL FIELDS MANDATORY").
                properly commits to the database and updates the list in real time.

    - Points:
        PAPER - PIECE - 2 points per piece
        METAL - dkg/kg - 100 points per kg
        E-WASTE - PIECE - 30 points per piece
        PLASTIC - dkg/kg/g - 150 points per kg
        GLASS - dkg/kg/g - 50 points per kg;
        ALUMINUM_CANS PIECE - 5 points per piece

    - Purchase Options:
        100 points:
            10 lei
        250 points:
            30 lei
        500 points:
            75 lei
        1000 points:
            100 lei

BACKEND STRUCTURE:
    project:
    Models:
        User
            InternalUser
            GoogleUser
        Session
        RecyclingCenter
        Voucher
        EmailToken
        Address?

        GeneralResponse(metadata + actual response)
            ErrorResponse
            UserResponse
            SessionResponse
            VoucherResponse
            ReciclyingCenterResponse?

    Controllers:
        everyone
        AuthController
            uses the UserService to validate login data and to create new users.
            uses the SessionService to create a new session for a user and return it.
            uses the EmailTokenService to create a new email token, and also to validate the user with it.
            uses the EmailSenderService to send an email to the user for validation.
            PATHS:
                api/auth/login POST
                api/auth/logout POST
                api/auth/verify POST
                api/auth/register POST
                api/auth/update PATCH **

        logged in
        RecyclingCenterController
            PATHS:
                users
                api/recycling-centers/all GET
                api/recycling-centers/{id} GET

                admin_only
                api/recycling-centers/(add) POST
                api/recycling-centers/(delete) DELETE
                api/recycling-centers/(update) PATCH

        VoucherController
            uses the SessionServiImplement proper validation and potentially integrate with backend validation.
ce and the UserService to get user specific data
            PATHS:
                users
                api/vouchers/all GET
                api/vouchers/{id} GET
                api/vouchers/buy POST

        ContributionsController
            uses the SessionService and the UserService to get user specific data
            PATHS:
                users
                api/contributions/all GET
                api/contributions/{id} GET
                api/contributions/(add) POST

        PurchaseController
            PATHS:
            api/purchases/all GET

    Services:
        Auth
            UserService
            SessionService
            EmailSenderService
            EmailTokenService

        Data
            RecyclingCenterService
            VoucherService
            ContributionService
            UserDataService


DB STRUCTURE:
    https://drawsql.app/teams/solo-153/diagrams/reward-app
